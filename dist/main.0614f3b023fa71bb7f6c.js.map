{"version":3,"file":"main.0614f3b023fa71bb7f6c.js","mappings":"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","sources":["webpack://elma/./src/components/scheduler/Scheduler.js","webpack://elma/./src/core/utils.js","webpack://elma/./src/core/DomListener.js","webpack://elma/./src/core/AppComponent.js","webpack://elma/./src/core/api.js","webpack://elma/./src/store/Store.js","webpack://elma/./src/components/table/table.template.js","webpack://elma/./src/components/table/Table.js","webpack://elma/./src/components/backlog/Backlog.js","webpack://elma/./src/components/backlog/backlog.template.js","webpack://elma/./src/index.js"],"sourcesContent":["//import { $ } from '@core/Dom';\r\n\r\n// компонент-контейнер\r\nexport class Scheduler {\r\n  constructor(selector, options) {\r\n    this.$el = document.querySelector(selector);\r\n    this.components = options.components ?? [];\r\n  }\r\n\r\n  #getRoot() {\r\n    const $root = document.createElement('div');\r\n    $root.classList.add('container');\r\n\r\n    this.components = this.components.map(Component => {\r\n      const $el = document.createElement('div');\r\n      $el.classList.add(Component.className);\r\n      const component = new Component($el);\r\n      $el.innerHTML = component.toHTML();\r\n      $root.append($el);\r\n      return component;\r\n    });\r\n    return $root;\r\n  }\r\n\r\n  // отображение объявленных компонентов\r\n  render() {\r\n    document.getElementById('loading').remove();\r\n    this.$el.append(this.#getRoot());\r\n    this.components.forEach(component => component.init())\r\n  }\r\n}\r\n","function pad(n) {\r\n  return (n < 10) ? ('0' + n) : n;\r\n}\r\n\r\nfunction getDates() {\r\n  const dates = [];\r\n  const date = new Date();\r\n\r\n  for (let i = 0; i < 7; i++){\r\n    const tempDate = new Date();\r\n    tempDate.setDate(date.getDate() + i);\r\n    const str = `${pad(tempDate.getDate())}.${pad(tempDate.getMonth() + 1)}`;\r\n    dates.push(str);\r\n  }\r\n  return dates;\r\n}\r\n\r\nfunction formatDate(date) {\r\n  const formattableDate = new Date(date);\r\n  const month = (formattableDate.getMonth() + 1) < 10 ? `0${formattableDate.getMonth() + 1}` : formattableDate.getMonth() + 1;\r\n  const day = formattableDate.getDate() < 10 ? `0${formattableDate.getDate()}` : formattableDate.getDate();\r\n  return `${day}.${month}`;\r\n}\r\n\r\nfunction capitalize(string) {\r\n  if (typeof string !== 'string') {\r\n    return '';\r\n  }\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport { capitalize, getDates, formatDate };\r\n","import { capitalize } from '@core/utils';\r\n\r\n// основной компонент ядра\r\nexport class DomListener {\r\n  constructor($root, listeners = []) {\r\n    if (!$root) {\r\n      throw new Error('Не передан элемент dom для DomListener');\r\n    }\r\n\r\n    this.$root = $root;\r\n    this.listeners = listeners;\r\n  }\r\n\r\n  addDomListeners() {\r\n    this.listeners.forEach(listener => {\r\n      const method = getMethodName(listener);\r\n      if (!this[method]) {\r\n        const className = this.name ?? '';\r\n        throw new Error(`В классе ${className} не найден метод ${method}!`);\r\n      }\r\n      this[method] = this[method].bind(this);\r\n      this.$root.addEventListener(listener, this[method]);\r\n    });\r\n  }\r\n\r\n  removeDomListeners() {\r\n    this.listeners.forEach(listener => {\r\n      const method = getMethodName(listener);\r\n      this.$root.removeEventListener(this.listener, this[method]);\r\n    });\r\n  }\r\n}\r\n\r\nfunction getMethodName(eventName) {\r\n  return 'on' + capitalize(eventName)\r\n}","import { DomListener } from \"@core/DomListener\";\r\n\r\n// родительский класс для компонентов\r\nexport class AppComponent extends DomListener {\r\n  constructor($root, options = {}) {\r\n    super($root, options.listeners);\r\n    this.name = options.name;\r\n  }\r\n\r\n  toHTML() {\r\n    return '';\r\n  }\r\n\r\n  init() {\r\n    this.addDomListeners();\r\n  }\r\n\r\n  destroy() {\r\n    this.removeDomListeners();\r\n  }\r\n}","export async function getData(url) {\r\n  const response = await fetch(url);\r\n  \r\n  if (response.ok) {\r\n    const json = await response.json();\r\n    return json;\r\n  } else {\r\n    throw new Error(`HTTP ошибка! Статус: ${response.status}`);\r\n  }\r\n}","import { getData } from '@core/api';\r\nimport { getDates, formatDate } from '@core/utils';\r\n\r\nexport class Store {\r\n  static get data() {\r\n    return window.store.data;\r\n  }\r\n\r\n  static get dragged() {\r\n    return window.store.data.draggable;\r\n  }\r\n\r\n  static draggable($el) {\r\n    window.store.data.draggable = $el;\r\n  }\r\n\r\n  async getStore() {\r\n    const apiUsers = await getData('https://varankin_dev.elma365.ru/api/extensions/2a38760e-083a-4dd0-aebc-78b570bfd3c7/script/users');\r\n    const apiTasks = await getData('https://varankin_dev.elma365.ru/api/extensions/2a38760e-083a-4dd0-aebc-78b570bfd3c7/script/tasks');\r\n\r\n    const apiData = {\r\n      apiUsers,\r\n      apiTasks\r\n    }\r\n\r\n    this.#setStore(apiData);\r\n  }\r\n\r\n  #getDataArrays({ apiUsers, apiTasks }) {\r\n    const tasks = [];\r\n    apiUsers.map(user => {\r\n      user.tasks = [];\r\n    });\r\n\r\n    apiTasks.forEach((task, i) => {\r\n      if (task.executor && typeof task.executor === 'number') {\r\n        apiUsers.forEach((user, i) => {\r\n          if (user.id === task.executor) {\r\n            apiUsers[i].tasks.push({\r\n              id: task.id,\r\n              subject: task.subject,\r\n              startDate: formatDate(task.planStartDate),\r\n              endDate: formatDate(task.planEndDate),\r\n              timestamp: + new Date(task.planEndDate)\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        tasks.push(task);\r\n      }\r\n    });\r\n\r\n    return {\r\n      users: apiUsers,\r\n      tasks\r\n    }\r\n  }\r\n\r\n  #setStore(apiData) {\r\n    const data = this.#getDataArrays(apiData);\r\n\r\n    window.store = {}\r\n    window.store.data = data;\r\n    window.store.data.dates = getDates();\r\n    window.store.data.now = + new Date();\r\n    window.store.data.draggable = null;\r\n  }\r\n}\r\n","import { Store } from '@/store/Store';\r\nimport { formatDate } from '@core/utils';\r\n\r\nfunction createRow(user, dates) {\r\n  const rowHtml = dates.reduce((allCell, date) => {\r\n    return allCell += createCell(user, date);\r\n  }, '');\r\n\r\n  return `\r\n    <div class=\"row\">\r\n      <div class=\"row__info\" id=\"${user.id}\">${user.firstName}<br>${user.surname}</div>\r\n      <div class=\"row__data\">${rowHtml}</div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction createCell(user, date) {\r\n  let cellHtml = '';\r\n\r\n  if (user.tasks) {\r\n    user.tasks.forEach(task => {\r\n      if (task.startDate === date) {\r\n        cellHtml += createTask(task);\r\n      }\r\n    })\r\n  }\r\n\r\n  return `\r\n    <div class=\"cell\" id=\"${user.id}-${date}\">\r\n      ${cellHtml}\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction createTask(task) {\r\n  const taskStatus = task.timestamp > Store.data.now ? 'task_done' : 'task_expired';\r\n\r\n  return `\r\n    <div class=\"task ${taskStatus}\" data-info=\"Deadline - ${task.endDate}\">\r\n      <p>${task.subject}</p>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction createInsertedTask(task) {\r\n  const taskStatus = + new Date(task.planEndDate) > Store.data.now ? 'task_done' : 'task_expired';\r\n  let $div = document.createElement('div');\r\n  $div.classList.add('task', taskStatus);\r\n  $div.setAttribute('data-info', `Deadline - ${formatDate(task.planEndDate)}`);\r\n  $div.innerHTML = `<p>${task.subject}</p>`;\r\n\r\n  return $div;\r\n}\r\n\r\nfunction createDateCell(date) {\r\n  return `<div class=\"col\">${date}</div>`;\r\n}\r\n\r\nfunction createTable() {\r\n  const { dates, users } = Store.data;\r\n\r\n  const datesHtml = dates.reduce((allDates, date) => {\r\n    return allDates += createDateCell(date);\r\n  }, '');\r\n\r\n  const usersHtml = users.reduce((allUsers, user) => {\r\n    return allUsers += createRow(user, dates);\r\n  }, '');\r\n\r\n  return `\r\n    <div class=\"table__nav\">\r\n      <button class=\"btn\" id=\"left\">Left</button>\r\n      <button class=\"btn\" id=\"right\">Right</button>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"row__info row__info_empty\"></div>\r\n      <div class=\"row__data\">\r\n        ${datesHtml}\r\n      </div>\r\n    </div>\r\n    ${usersHtml}\r\n  `;\r\n}\r\n\r\nexport { createTable, createInsertedTask};","import { AppComponent } from \"@core/AppComponent\";\r\nimport { createTable, createInsertedTask } from '@/components/table/table.template';\r\nimport { Store } from '@/store/Store';\r\nimport { formatDate } from '@core/utils';\r\n\r\nexport class Table extends AppComponent {\r\n  static className = 'table';\r\n\r\n  constructor($root) {\r\n    super($root, {\r\n      name: 'Table',\r\n      listeners: ['dragover', 'dragenter', 'drop', 'click']\r\n    });\r\n  }\r\n\r\n  #getTask(id) {\r\n    return Store.data.tasks.find(task => {\r\n      if (task.id === id) {\r\n        return {\r\n          task\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  #delTask(id) {\r\n    const logTask = document.getElementById(id);\r\n    if (logTask) logTask.remove();\r\n  }\r\n\r\n  onDragover(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onDragenter(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onDrop(e) {\r\n    const id = Store.dragged;\r\n\r\n    if (e.target.classList.contains('cell')) {\r\n      const taskData = this.#getTask(id);\r\n      const html = createInsertedTask(taskData);\r\n      e.target.append(html);\r\n      this.#delTask(id);\r\n    } else if (e.target.classList.contains('row__info')) {\r\n      const userId = e.target.id;\r\n      const taskData = this.#getTask(id);\r\n      const taskDeadline = formatDate(taskData.planStartDate);\r\n      const cell = document.getElementById(`${userId}-${taskDeadline}`);\r\n      if (cell) {\r\n        const html = createInsertedTask(taskData);\r\n        cell.append(html);\r\n        this.#delTask(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(e) {\r\n    if (e.target.id === 'left') {\r\n      console.log(e.target.id);\r\n    } else if (e.target.id === 'right') {\r\n      console.log(e.target.id);\r\n    }\r\n  }\r\n\r\n  toHTML() {\r\n    return createTable();\r\n  }\r\n}","import { AppComponent } from \"@core/AppComponent\";\r\nimport { createTaskList } from '@/components/backlog/backlog.template';\r\nimport { Store } from '@/store/Store';\r\n\r\nexport class Backlog extends AppComponent {\r\n  static className = 'backlog';\r\n\r\n  constructor($root) {\r\n    super($root, {\r\n      name: 'Backlog',\r\n      listeners: ['dragstart', 'dragend']\r\n    });\r\n  }\r\n\r\n  onDragstart(e) {\r\n    setTimeout(() => {\r\n      e.target.classList.add('backlog__item_hidden');\r\n      Store.draggable(e.target.id);\r\n    });\r\n  }\r\n\r\n  onDragend(e) {\r\n    e.target.classList.remove('backlog__item_hidden');\r\n  }\r\n\r\n  toHTML() {\r\n    return createTaskList();\r\n  }\r\n}","import { Store } from '@/store/Store';\r\n\r\nfunction createTask(id, name, text) {\r\n  const nameTask = name ?? 'Неизвестное имя';\r\n  const textTask = text ?? 'Нет даты';\r\n\r\n  return `\r\n    <div class=\"backlog__item\" draggable=\"true\" id=\"${id}\">\r\n      <p class=\"backlog__name\">${nameTask}</p>\r\n      <p class=\"backlog__text\"><span>Deadline:</span> ${textTask}</p>\r\n    </div>\r\n  `;\r\n}\r\n\r\nexport function createTaskList() {\r\n  let html = Store.data.tasks.reduce((allTasks, task) => {\r\n    return allTasks += createTask(task.id, task.subject, task.planEndDate);\r\n  }, '');\r\n\r\n  return `\r\n    <p class=\"backlog__title\">Backlog</p>\r\n    <div class=\"backlog__wrapper\">\r\n      ${html}\r\n    </div>\r\n  `;\r\n}\r\n","import { Scheduler } from '@/components/scheduler/Scheduler';\r\nimport { Table } from '@/components/table/Table';\r\nimport { Backlog } from '@/components/backlog/Backlog';\r\nimport { Store } from '@/store/Store';\r\nimport './scss/main.scss';\r\n\r\nconst store = new Store();\r\n\r\nconst app = async () => {\r\n  await store.getStore();\r\n}\r\n\r\napp().then(response => {\r\n  const scheduler = new Scheduler('#app', {\r\n    components: [\r\n      Table,\r\n      Backlog\r\n    ]\r\n  });\r\n  \r\n  scheduler.render();\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["Scheduler","selector","options","this","$el","document","querySelector","components","getElementById","remove","append","forEach","component","init","$root","createElement","classList","add","map","Component","className","innerHTML","toHTML","pad","n","formatDate","date","formattableDate","Date","month","getMonth","day","getDate","getMethodName","eventName","string","charAt","toUpperCase","slice","AppComponent","listeners","name","addDomListeners","removeDomListeners","Error","listener","method","bind","addEventListener","removeEventListener","getData","url","fetch","response","ok","json","status","i","Store","apiUsers","apiTasks","apiData","window","store","data","draggable","tasks","user","task","executor","id","push","subject","startDate","planStartDate","endDate","planEndDate","timestamp","users","dates","tempDate","setDate","str","getDates","now","createInsertedTask","taskStatus","$div","setAttribute","Table","e","preventDefault","dragged","target","contains","html","userId","taskData","taskDeadline","cell","console","log","datesHtml","reduce","allDates","createDateCell","usersHtml","allUsers","rowHtml","allCell","cellHtml","createTask","createCell","firstName","surname","createRow","find","logTask","Backlog","setTimeout","allTasks","nameTask","textTask","text","app","getStore","then","render"],"sourceRoot":""}